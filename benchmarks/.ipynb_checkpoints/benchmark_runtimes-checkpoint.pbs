#!/bin/bash
## Submit job to our class's allocation
#PBS -A ebf11_d_g_gc_default
## Alternatively could comment out line above (by adding a second # at the beginning of the line)
# and uncomment the lines below (by removing one #) to use the "Open" allocation
##PBS -A open
## Time requested: 0 hours, 15 minutes, 0 seconds
#PBS -l walltime=01:00:00    
## Ask for 4 nodes, each with one core (you may be assigned multiple cores on the same node)
#PBS -l nodes=1:ppn=8      
## Each processor will use no more than 1GB of RAM
#PBS -l pmem=1gb             
## combine STDOUT and STDERR into one file
#PBS -j oe                   
## Specifices job name, so easy to find in qstat
#PBS -N SuperFitSimLC        
## Uncomment next two PBS commands (by removing one # on each line) and replace with your email if you want to be notified when jobs start and stop
#PBS -M kmd6851@psu.edu       
## Ask for emails when jobs begins, ends or aborts
#PBS -m abe                  

NUMNODES=10
NPOINTS=($(seq 10 10 $(( $NUMNODES * 10 )) )) 

echo "Starting job $PBS_JOBNAME"
date
echo "Job id: $PBS_JOBID"
echo "Nodefile: $PBS_NODEFILE"
echo "Was assigned the following nodes"
NODES=$( cat $PBS_NODEFILE )
NODEARR=( )
echo $NODES
for NODE in $NODES
do
    NODEARR+=($NODE)
done    
echo "Loading modules to provide Julia 1.6.0"
#module load anaconda3
module use /gpfs/group/RISE/sw7/modules
module load julia/1.6.0
export LD_LIBRARY_PATH=/gpfs/group/RISE/sw7/julia-1.6.0/julia-1.6.0/lib

echo "About to change into $PBS_O_WORKDIR"
cd $PBS_O_WORKDIR            # Change into directory where job was submitted from
echo "About to start Julia specifying list of assigned nodes"
iarr=($(seq 0 1 $(( $NUMNODES - 1 )) ))
for i in $iarr
do
    echo $i
    NODEIDX=$(( i * 2 ))
    echo $NODEIDX
    echo "${NODEARR[$NODEIDX]}" > tmp_machine_file_$i.txt  
    output='../../stored_models/sim_'"${NPOINTS[i]}"'_'"$NODEIDX"'.jls'
    timing='../../stored_times/sim_'"${NPOINTS[i]}"'_'"$NODEIDX"'.txt'
    echo $output
    echo $timing
    julia --project=".." --machine-file tmp_machine_file_$i.txt --threads 2 benchmark_runtimes.jl --timing_file=$timing --npoints=${NPOINTS[i]} --sigma=0.1 --output_file=$output -f &
done
wait
echo "Deleting temp files"
for i in $iarr
do
    rm tmp_machine_file_$i.txt
done
echo "Julia exited"
date

